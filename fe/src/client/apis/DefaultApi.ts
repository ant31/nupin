/* tslint:disable */
/* eslint-disable */
/**
 * internal nupin API
 * The specification for the internal API of nupin
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  SetCodePayload,
  User,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    SetCodePayloadFromJSON,
    SetCodePayloadToJSON,
    UserFromJSON,
    UserToJSON,
} from '../models/index';

export interface UpdatePinRequest {
    setCodePayload: SetCodePayload;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * get the loged in user
     * get the loged in user
     */
    async getUserRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<User>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v0/user`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));
    }

    /**
     * get the loged in user
     * get the loged in user
     */
    async getUser(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {
        const response = await this.getUserRaw(initOverrides);
        return await response.value();
    }

    /**
     * Set a new code/pin
     * Creates or replaces the users code/pin
     */
    async updatePinRaw(requestParameters: UpdatePinRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.setCodePayload === null || requestParameters.setCodePayload === undefined) {
            throw new runtime.RequiredError('setCodePayload','Required parameter requestParameters.setCodePayload was null or undefined when calling updatePin.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v0/code`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: SetCodePayloadToJSON(requestParameters.setCodePayload),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Set a new code/pin
     * Creates or replaces the users code/pin
     */
    async updatePin(requestParameters: UpdatePinRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.updatePinRaw(requestParameters, initOverrides);
    }

}
